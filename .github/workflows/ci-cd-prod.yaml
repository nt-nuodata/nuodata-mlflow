on:
  workflow_dispatch:

name: Uploading Image to prod

jobs:
  upload_to_ecr:
    name: Deploy to prod
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: us-west-1
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Update host value in keycloak_auth.ini
        run: |
          NEW_HOST="https://identity.nt.nuodata.io/"
          CONFIG_FILE="/home/runner/work/nuodata-mlflow/nuodata-mlflow/mlflow/server/keycloak_auth/keycloak_auth.ini"
          sed -i "s|^host = .*|host = ${NEW_HOST}|" $CONFIG_FILE
          cat $CONFIG_FILE
      
      - name: Update Keycloak URL and Client ID in keycloak-config.ts
        run: |
          KEYCLOAK_URL="https://identity.nt.nuodata.io/"
          CLIENT_ID="nuodata-website"
          CONFIG_FILE="/home/runner/work/nuodata-mlflow/nuodata-mlflow/mlflow/server/js/src/keycloak-config.ts"
          sed -i "s|url: '.*'|url: '${KEYCLOAK_URL}'|" $CONFIG_FILE
          sed -i "s|clientId: '.*'|clientId: '${CLIENT_ID}'|" $CONFIG_FILE
          cat $CONFIG_FILE
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID_PROD}}:role/github-actions-eks-deploy-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nuodata-mlflow-repo
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f nuodata/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:latest"
